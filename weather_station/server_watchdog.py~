import subprocess
import time
import gc
import psutil
import os
import datetime
import threading
import logging

retry_time = 30            
proc_retry_time = 120

logging.basicConfig(level=logging.INFO, format="[%(levelname)s] %(message)s")


def clean_ram():
    """Attempt to free up memory by running garbage collection."""
    gc.collect()
    logging.info("Garbage collection completed.")

def kill_zombie_processes():
    """Terminate any zombie processes to release system resources."""
    for proc in psutil.process_iter(['pid', 'status']):
        if proc.info['status'] == psutil.STATUS_ZOMBIE:
            try:
                os.kill(proc.info['pid'], 9)
                logging.info(f"Terminated zombie process with PID {proc.info['pid']}")
            except Exception as ex:
                logging.error(f"Failed to kill process {proc.info['pid']}: {ex}")

def run_ingest():
    """Runs the ingest script every 30 seconds in a separate thread."""
    while True:
        try:
            subprocess.run(["python", "server_weather_ingest.py"], check=True)
            retry_time = 30            
        except subprocess.CalledProcessError as e:
            retry_time = 5
            logging.error(f"Processing script crashed with exit code {e.returncode}. Restarting in {retry_time} seconds...")
        except Exception as e:
            retry_time = 5
            logging.error(f"Unexpected error in processing script: {e}. Restarting in {retry_time} seconds...")
         
        # Clean up RAM and kill zombie processes
        clean_ram()
        kill_zombie_processes()

        # Countdown timer before restarting
        for remaining in range(retry_time, 0, -1):
            print(f"Restarting weather ingest in {remaining} seconds...", end="\r", flush=True)
            time.sleep(1)
        print("Restarting now!                               ")


def plant_plot():
    """Runs the ingest script every 30 seconds in a separate thread."""
    while True:
        try:
            subprocess.run(["python", "../plant_station/data_plot.py"], check=True)
            retry_time = 120            
        except subprocess.CalledProcessError as e:
            retry_time = 5
            logging.error(f"Plant plot script crashed with exit code {e.returncode}. Restarting in {retry_time} seconds...")
        except Exception as e:
            retry_time = 5
            logging.error(f"Unexpected error in plant plot script: {e}. Restarting in {retry_time} seconds...")
         
        # Clean up RAM and kill zombie processes
        clean_ram()
        kill_zombie_processes()

        # Countdown timer before restarting
        for remaining in range(retry_time, 0, -1):
            print(f"Restarting plant plot in {remaining} seconds...", end="\r", flush=True)
            time.sleep(1)
        print("Restarting now!                               ")


def plant_ingest():
    """Runs the ingest script every 30 seconds in a separate thread."""
    while True:
        try:
            subprocess.run(["python", "../plant_station/plant_data_ingest.py"], check=True)
            retry_time = 30            
        except subprocess.CalledProcessError as e:
            retry_time = 5
            logging.error(f"Plant ingest script crashed with exit code {e.returncode}. Restarting in {retry_time} seconds...")
        except Exception as e:
            retry_time = 5
            logging.error(f"Unexpected error in plant ingest script: {e}. Restarting in {retry_time} seconds...")
         
        # Clean up RAM and kill zombie processes
        clean_ram()
        kill_zombie_processes()

        # Countdown timer before restarting
        for remaining in range(retry_time, 0, -1):
            print(f"Restarting plant ingest in {remaining} seconds...", end="\r", flush=True)
            time.sleep(1)
        print("Restarting now!                               ")





def run_processing():
    """Runs the processing script in the main loop."""
    while True:
        try:
            subprocess.run(["python", "server_weather_processing.py"], check=True)
            proc_retry_time = 120

            # Current time
            current_time = datetime.datetime.now()
            start_time = current_time + datetime.timedelta(seconds=proc_retry_time)

            logging.info(
                f"Weather processing complete!!!!! \n\n"
                f"\tCurrent time: {current_time.strftime('%Y-%m-%d %H:%M:%S')}\n"
                f"\tSleeping for {retry_time / 60:.2f} mins...\n"
                f"\tWill start again at: {start_time.strftime('%Y-%m-%d %H:%M:%S')}\n\n"
                f"============================================================================================="
            )
        except subprocess.CalledProcessError as e:
            proc_retry_time = 5


            logging.error(f"Processing script crashed with exit code {e.returncode}. Restarting in {proc_retry_time} seconds...")
        except Exception as e:
            proc_retry_time = 5
            logging.error(f"Unexpected error in processing script: {e}. Restarting in {proc_retry_time} seconds...")
        
        # Clean up RAM and kill zombie processes
        clean_ram()
        kill_zombie_processes()

        # Wait before restarting
        # Countdown timer before restarting
        for remaining in range(proc_retry_time, 0, -1):
            print(f"Restarting weather processing in {remaining} seconds...", end="\r", flush=True)
            time.sleep(1)
        print("Restarting now!                               ")


if __name__ == "__main__":
    # Start the ingest script in a separate thread
    ingest_thread = threading.Thread(target=run_ingest, daemon=True)
    ingest_thread.start()

    plant_ingest_thread = threading.Thread(target=plant_ingest, daemon=True)
    plant_ingest_thread.start()  

    print("Waiting for 20 seconds to start plotting scripts")
    time.sleep(20)
    
    plant_plot_thread = threading.Thread(target=plant_plot, daemon=True)
    plant_plot_thread.start()
    run_processing()

